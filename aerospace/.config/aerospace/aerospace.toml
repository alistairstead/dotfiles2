# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# Setup workspace-specific layouts (matching yabai config)
after-startup-command = [
    # Workspace 2 (comms) - accordion layout similar to yabai's stack
    'workspace 2',
    'layout accordion horizontal',
    # Workspace 7 (media) - accordion layout similar to yabai's stack  
    'workspace 7',
    'layout accordion horizontal',
    # Workspace 9 (scratch) - all windows float by default
    'workspace 9',
    'layout floating',
    # Return to workspace 1
    'workspace 1',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# Window management commands matching yabai
alt-z = 'fullscreen'
alt-m = 'fullscreen'
alt-f = 'layout floating tiling'
alt-s = 'layout tiles accordion'
alt-d = 'layout tiles horizontal vertical'
alt-b = 'balance-sizes'
alt-equal = 'balance-sizes'

# Window rotation and mirroring
alt-x = 'split horizontal'
alt-y = 'split vertical'
alt-r = 'split opposite'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# Sticky window (simulated with floating)
alt-shift-s = 'layout floating'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-0 = 'move-node-to-workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Remove these app launchers as they conflict with layout commands
# Apps should be launched via Raycast or other launcher

# Window resizing with Option+Control (matching yabai)
alt-ctrl-h = 'resize width -100'
alt-ctrl-j = 'resize height +100'
alt-ctrl-k = 'resize height -100'
alt-ctrl-l = 'resize width +100'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-a = 'mode service'
# ctrl-enter = 'mode apps'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]

r = ['reload-config', 'mode main']
b = ['flatten-workspace-tree', 'mode main'] # balance
l = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout

backspace = ['close-all-windows-but-current', 'mode main']
enter = ['mode main']


# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

ctrl-h = ['join-with left', 'mode main']
ctrl-j = ['join-with down', 'mode main']
ctrl-k = ['join-with up', 'mode main']
ctrl-l = ['join-with right', 'mode main']

# Workspace 1 - Main (browsers)
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 1'

# Workspace 2 - Comms
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.facebook.Messenger'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.readdle.SparkDesktop'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace 2'

# Workspace 3 - Code
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.draculatheme.sizzy'
run = 'move-node-to-workspace 3'

# Workspace 4 - Ref (GitHub, documentation)
[[on-window-detected]]
if.app-id = 'com.github.GitHubClient'
run = 'move-node-to-workspace 4'

# Workspace 5 - Productivity
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = 'move-node-to-workspace 5'

# Workspace 6 - VM
[[on-window-detected]]
if.app-id = 'com.orbstack.OrbStack'
run = 'move-node-to-workspace 6'

# Workspace 7 - Media
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace 7'

[[on-window-detected]]
if.app-id = 'com.apple.TV'
run = 'move-node-to-workspace 7'

# Workspace 8 - Misc
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace 8'

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace 8'

# Floating apps (unmanaged in yabai)
[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ArchiveUtility'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Calculator'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Dictionary'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.PhotoBooth'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ScreenSharing'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.thnkdev.Screens5'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.SoftwareUpdate'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.SystemInformation'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.systemsettings'
check-further-callbacks = true
run = ['layout floating']

# Sticky apps (always on top - simulated with floating in aerospace)
[[on-window-detected]]
if.app-id = 'com.1password.1Password'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'co.teamport.around'
check-further-callbacks = true
run = ['layout floating']

# Other floating apps
[[on-window-detected]]
if.app-id = 'com.macpaw.CleanMyMac4'
check-further-callbacks = true
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.raycast.macos'
check-further-callbacks = true
run = ['layout floating']
