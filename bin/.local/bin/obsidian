#!/usr/bin/env bash
# Search Obsidian notes and open selected file in Zed

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
NOTES_DIR="${NOTES_DIR:-$HOME/Documents/Notes}"
EDITOR="${EDITOR:-zed}"

# Function to display usage
usage() {
    echo "Usage: $0 [search_query]"
    echo "Search through Obsidian notes and open selected file in Zed"
    echo ""
    echo "If no query is provided, you'll be prompted to enter one."
    exit 0
}

# Check if notes directory exists
if [ ! -d "$NOTES_DIR" ]; then
    echo -e "${RED}Error: Notes directory not found at $NOTES_DIR${NC}"
    exit 1
fi

# Get search query
QUERY="$1"
if [ -z "$QUERY" ]; then
    echo -en "${CYAN}Enter search query: ${NC}"
    read -r QUERY
    if [ -z "$QUERY" ]; then
        echo -e "${RED}Error: No search query provided${NC}"
        exit 1
    fi
fi

echo -e "${BLUE}Searching for '${QUERY}' in ${NOTES_DIR}...${NC}\n"

# Create temporary file for search results
TEMP_FILE=$(mktemp)
trap "rm -f $TEMP_FILE" EXIT

# Search using ripgrep with context
rg --color=always \
   --line-number \
   --no-heading \
   --smart-case \
   --max-columns=150 \
   --max-columns-preview \
   --glob '*.md' \
   --glob '!.obsidian/*' \
   "$QUERY" "$NOTES_DIR" > "$TEMP_FILE" 2>/dev/null || {
    echo -e "${YELLOW}No matches found for '${QUERY}'${NC}"
    exit 0
}

# Count results
TOTAL_MATCHES=$(wc -l < "$TEMP_FILE")
echo -e "${GREEN}Found ${TOTAL_MATCHES} matches:${NC}\n"

# Display results with line numbers
declare -a FILES=()
declare -a LINES=()
COUNTER=1

while IFS=: read -r file line content; do
    # Store file and line number
    FILES+=("$file")
    LINES+=("$line")
    
    # Display result
    printf "${YELLOW}[%3d]${NC} ${CYAN}%s${NC}:${GREEN}%s${NC}\n" \
        "$COUNTER" \
        "${file#$NOTES_DIR/}" \
        "$line"
    
    # Display content preview (limited width)
    echo -e "      ${content}" | sed 's/^[[:space:]]*/      /'
    echo ""
    
    ((COUNTER++))
done < "$TEMP_FILE"

# If only one result, open it automatically
if [ "${#FILES[@]}" -eq 1 ]; then
    echo -e "${GREEN}Opening ${FILES[0]} at line ${LINES[0]}...${NC}"
    $EDITOR "${FILES[0]}:${LINES[0]}" &
    exit 0
fi

# Prompt for selection
echo -en "${CYAN}Select file to open (1-${#FILES[@]}) or 'q' to quit: ${NC}"
read -r SELECTION

# Validate selection
if [ "$SELECTION" = "q" ] || [ "$SELECTION" = "Q" ]; then
    echo "Cancelled."
    exit 0
fi

if ! [[ "$SELECTION" =~ ^[0-9]+$ ]] || [ "$SELECTION" -lt 1 ] || [ "$SELECTION" -gt "${#FILES[@]}" ]; then
    echo -e "${RED}Invalid selection${NC}"
    exit 1
fi

# Open selected file in Zed at the specific line
INDEX=$((SELECTION - 1))
echo -e "${GREEN}Opening ${FILES[$INDEX]} at line ${LINES[$INDEX]}...${NC}"
$EDITOR "${FILES[$INDEX]}:${LINES[$INDEX]}" &