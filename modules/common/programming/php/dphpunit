#!/bin/bash

# Customize the following:
containerName=$CONTAINER
xdbugArgs=$XDEBUG_CONFIG

# detect local path and remove from args
localPhpUnitResultPath='/tmp/phpunit-result.xml'
localPhpUnitCoveragePath=''
argsInput=${*}
runFile=$(echo "$argsInput" | awk '{print $1}')
phpTestPath=$(dirname "$runFile")
pushd "$phpTestPath" >/dev/null || exit
projectPath="$(git rev-parse --show-toplevel)"
pushd >/dev/null || exit

subPath=$(awk -F '/vendor/' '{print $1}' <<<"$projectPath")

## detect test result output
for i in $argsInput; do
  case $i in
  --log-junit=*)
    outputPath="${i#*=}"
    ;;
  *) ;;
  esac
done

# replace with local
args=("${argsInput/$subPath\//}")
args=("${args//(*/}")

# Detect path
container=$(docker ps -n=-1 --filter name="$containerName" --format="{{.ID}}")
execPath=$(docker exec -it "$container" /bin/bash -c "if [ -f /bin/sh ]; then echo /bin/sh; else echo /bin/bash; fi" | tr -d '\r')
dockerPath=$(docker inspect --format "{{.Config.WorkingDir}}" "$container")

cmd="XDEBUG_CONFIG=$xdbugArgs vendor/bin/phpunit"

## debug
if [ "$DEBUG" = "true" ]; then
  echo "Raw ARGS: ${*}"
  echo "Params:   ${args[*]}"
  echo "Docker:   $dockerPath"
  echo "Local:    $projectPath"
  echo "Result:   $outputPath"
  echo "docker exec -it $container php -d memory_limit=-1 vendor/bin/phpunit ${args[*]}"
  echo "docker exec -it $container $execPath -c $cmd  ${args[*]} --log-junit=${localPhpUnitResultPath}"
fi

# Run the tests
docker exec -it "$container" "$execPath" -c "$cmd  ${args[*]} --log-junit=${localPhpUnitResultPath}"

# copy results
docker cp -a "$container:$localPhpUnitResultPath" "$outputPath" &>/dev/null

# replace docker path to locals
sed -i "s#$dockerPath#$projectPath#g" "$outputPath"
